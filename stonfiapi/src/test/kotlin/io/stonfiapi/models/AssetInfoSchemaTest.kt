/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.stonfiapi.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.stonfiapi.models.AssetInfoSchema
import io.stonfiapi.models.AssetKindSchema

class AssetInfoSchemaTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of AssetInfoSchema
        //val modelInstance = AssetInfoSchema()

        // to test the property `blacklisted` - Asset is blacklisted
        should("test blacklisted") {
            // uncomment below to test the property
            //modelInstance.blacklisted shouldBe ("TODO")
        }

        // to test the property `community` - Asset is community created
        should("test community") {
            // uncomment below to test the property
            //modelInstance.community shouldBe ("TODO")
        }

        // to test the property `contractAddress` - Address of smart contract
        should("test contractAddress") {
            // uncomment below to test the property
            //modelInstance.contractAddress shouldBe ("TODO")
        }

        // to test the property `decimals` - Number of decimal places used to represent fractional amounts of an asset
        should("test decimals") {
            // uncomment below to test the property
            //modelInstance.decimals shouldBe ("TODO")
        }

        // to test the property `defaultSymbol` - Asset has default symbol
        should("test defaultSymbol") {
            // uncomment below to test the property
            //modelInstance.defaultSymbol shouldBe ("TODO")
        }

        // to test the property `deprecated` - Asset is deprecated
        should("test deprecated") {
            // uncomment below to test the property
            //modelInstance.deprecated shouldBe ("TODO")
        }

        // to test the property `kind`
        should("test kind") {
            // uncomment below to test the property
            //modelInstance.kind shouldBe ("TODO")
        }

        // to test the property `symbol` - Asset symbol
        should("test symbol") {
            // uncomment below to test the property
            //modelInstance.symbol shouldBe ("TODO")
        }

        // to test the property `balance` - Asset balance
        should("test balance") {
            // uncomment below to test the property
            //modelInstance.balance shouldBe ("TODO")
        }

        // to test the property `dexPriceUsd` - Ston internal asset price in USD
        should("test dexPriceUsd") {
            // uncomment below to test the property
            //modelInstance.dexPriceUsd shouldBe ("TODO")
        }

        // to test the property `dexUsdPrice` - [DEPRECATED] Ston internal asset price in USD
        should("test dexUsdPrice") {
            // uncomment below to test the property
            //modelInstance.dexUsdPrice shouldBe ("TODO")
        }

        // to test the property `displayName` - Displayable name
        should("test displayName") {
            // uncomment below to test the property
            //modelInstance.displayName shouldBe ("TODO")
        }

        // to test the property `imageUrl` - URL to asset image
        should("test imageUrl") {
            // uncomment below to test the property
            //modelInstance.imageUrl shouldBe ("TODO")
        }

        // to test the property `thirdPartyPriceUsd` - Asset price in USD
        should("test thirdPartyPriceUsd") {
            // uncomment below to test the property
            //modelInstance.thirdPartyPriceUsd shouldBe ("TODO")
        }

        // to test the property `thirdPartyUsdPrice` - [DEPRECATED] Asset price in USD
        should("test thirdPartyUsdPrice") {
            // uncomment below to test the property
            //modelInstance.thirdPartyUsdPrice shouldBe ("TODO")
        }

        // to test the property `walletAddress` - Asset wallet address
        should("test walletAddress") {
            // uncomment below to test the property
            //modelInstance.walletAddress shouldBe ("TODO")
        }

    }
}
