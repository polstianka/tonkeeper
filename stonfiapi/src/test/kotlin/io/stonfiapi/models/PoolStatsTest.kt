/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.stonfiapi.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.stonfiapi.models.PoolStats

class PoolStatsTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of PoolStats
        //val modelInstance = PoolStats()

        // to test the property `baseId` - Base asset id
        should("test baseId") {
            // uncomment below to test the property
            //modelInstance.baseId shouldBe ("TODO")
        }

        // to test the property `baseLiquidity` - Amount of liquidity of base asset
        should("test baseLiquidity") {
            // uncomment below to test the property
            //modelInstance.baseLiquidity shouldBe ("TODO")
        }

        // to test the property `baseName` - Base asset name
        should("test baseName") {
            // uncomment below to test the property
            //modelInstance.baseName shouldBe ("TODO")
        }

        // to test the property `baseSymbol` - Base asset symbol
        should("test baseSymbol") {
            // uncomment below to test the property
            //modelInstance.baseSymbol shouldBe ("TODO")
        }

        // to test the property `baseVolume` - volume of base asset
        should("test baseVolume") {
            // uncomment below to test the property
            //modelInstance.baseVolume shouldBe ("TODO")
        }

        // to test the property `lastPrice` - Last asset quota price in base assets
        should("test lastPrice") {
            // uncomment below to test the property
            //modelInstance.lastPrice shouldBe ("TODO")
        }

        // to test the property `lpPrice` - [DEPRECATED] Liquidity pool token price
        should("test lpPrice") {
            // uncomment below to test the property
            //modelInstance.lpPrice shouldBe ("TODO")
        }

        // to test the property `lpPriceUsd` - Liquidity pool token price
        should("test lpPriceUsd") {
            // uncomment below to test the property
            //modelInstance.lpPriceUsd shouldBe ("TODO")
        }

        // to test the property `poolAddress` - Address of the pool
        should("test poolAddress") {
            // uncomment below to test the property
            //modelInstance.poolAddress shouldBe ("TODO")
        }

        // to test the property `quoteId` - Quote asset id
        should("test quoteId") {
            // uncomment below to test the property
            //modelInstance.quoteId shouldBe ("TODO")
        }

        // to test the property `quoteLiquidity` - Amount of liquidity of quote asset
        should("test quoteLiquidity") {
            // uncomment below to test the property
            //modelInstance.quoteLiquidity shouldBe ("TODO")
        }

        // to test the property `quoteName` - Quote asset name
        should("test quoteName") {
            // uncomment below to test the property
            //modelInstance.quoteName shouldBe ("TODO")
        }

        // to test the property `quoteSymbol` - Quote asset symbol
        should("test quoteSymbol") {
            // uncomment below to test the property
            //modelInstance.quoteSymbol shouldBe ("TODO")
        }

        // to test the property `quoteVolume` - Volume of quote asset
        should("test quoteVolume") {
            // uncomment below to test the property
            //modelInstance.quoteVolume shouldBe ("TODO")
        }

        // to test the property `routerAddress` - Address of router
        should("test routerAddress") {
            // uncomment below to test the property
            //modelInstance.routerAddress shouldBe ("TODO")
        }

        // to test the property `url` - URL of the pool
        should("test url") {
            // uncomment below to test the property
            //modelInstance.url shouldBe ("TODO")
        }

        // to test the property `apy` - Annual percentage yield
        should("test apy") {
            // uncomment below to test the property
            //modelInstance.apy shouldBe ("TODO")
        }

    }
}
