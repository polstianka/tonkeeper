/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.tonapi.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.tonapi.apis.EmulationApi
import io.tonapi.models.AccountEvent
import io.tonapi.models.DecodeMessageRequest
import io.tonapi.models.DecodedMessage
import io.tonapi.models.EmulateMessageToWalletRequest
import io.tonapi.models.Event
import io.tonapi.models.MessageConsequences
import io.tonapi.models.StatusDefaultResponse
import io.tonapi.models.Trace

class EmulationApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of EmulationApi
        //val apiInstance = EmulationApi()

        // to test decodeMessage
        should("test decodeMessage") {
            // uncomment below to test decodeMessage
            //val decodeMessageRequest : DecodeMessageRequest =  // DecodeMessageRequest | bag-of-cells serialized to base64
            //val result : DecodedMessage = apiInstance.decodeMessage(decodeMessageRequest)
            //result shouldBe ("TODO")
        }

        // to test emulateMessageToAccountEvent
        should("test emulateMessageToAccountEvent") {
            // uncomment below to test emulateMessageToAccountEvent
            //val accountId : kotlin.String = 0:97264395BD65A255A429B11326C84128B7D70FFED7949ABAE3036D506BA38621 // kotlin.String | account ID
            //val decodeMessageRequest : DecodeMessageRequest =  // DecodeMessageRequest | bag-of-cells serialized to base64
            //val acceptLanguage : kotlin.String = ru-RU,ru;q=0.5 // kotlin.String | 
            //val ignoreSignatureCheck : kotlin.Boolean = true // kotlin.Boolean | 
            //val result : AccountEvent = apiInstance.emulateMessageToAccountEvent(accountId, decodeMessageRequest, acceptLanguage, ignoreSignatureCheck)
            //result shouldBe ("TODO")
        }

        // to test emulateMessageToEvent
        should("test emulateMessageToEvent") {
            // uncomment below to test emulateMessageToEvent
            //val decodeMessageRequest : DecodeMessageRequest =  // DecodeMessageRequest | bag-of-cells serialized to base64
            //val acceptLanguage : kotlin.String = ru-RU,ru;q=0.5 // kotlin.String | 
            //val ignoreSignatureCheck : kotlin.Boolean = true // kotlin.Boolean | 
            //val result : Event = apiInstance.emulateMessageToEvent(decodeMessageRequest, acceptLanguage, ignoreSignatureCheck)
            //result shouldBe ("TODO")
        }

        // to test emulateMessageToTrace
        should("test emulateMessageToTrace") {
            // uncomment below to test emulateMessageToTrace
            //val decodeMessageRequest : DecodeMessageRequest =  // DecodeMessageRequest | bag-of-cells serialized to base64
            //val ignoreSignatureCheck : kotlin.Boolean = true // kotlin.Boolean | 
            //val result : Trace = apiInstance.emulateMessageToTrace(decodeMessageRequest, ignoreSignatureCheck)
            //result shouldBe ("TODO")
        }

        // to test emulateMessageToWallet
        should("test emulateMessageToWallet") {
            // uncomment below to test emulateMessageToWallet
            //val emulateMessageToWalletRequest : EmulateMessageToWalletRequest =  // EmulateMessageToWalletRequest | bag-of-cells serialized to base64 and additional parameters to configure emulation
            //val acceptLanguage : kotlin.String = ru-RU,ru;q=0.5 // kotlin.String | 
            //val result : MessageConsequences = apiInstance.emulateMessageToWallet(emulateMessageToWalletRequest, acceptLanguage)
            //result shouldBe ("TODO")
        }

    }
}
