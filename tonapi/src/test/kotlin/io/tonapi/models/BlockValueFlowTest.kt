/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.tonapi.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.tonapi.models.BlockValueFlow
import io.tonapi.models.BlockCurrencyCollection

class BlockValueFlowTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of BlockValueFlow
        //val modelInstance = BlockValueFlow()

        // to test the property `fromPrevBlk`
        should("test fromPrevBlk") {
            // uncomment below to test the property
            //modelInstance.fromPrevBlk shouldBe ("TODO")
        }

        // to test the property `toNextBlk`
        should("test toNextBlk") {
            // uncomment below to test the property
            //modelInstance.toNextBlk shouldBe ("TODO")
        }

        // to test the property `imported`
        should("test imported") {
            // uncomment below to test the property
            //modelInstance.imported shouldBe ("TODO")
        }

        // to test the property `exported`
        should("test exported") {
            // uncomment below to test the property
            //modelInstance.exported shouldBe ("TODO")
        }

        // to test the property `feesCollected`
        should("test feesCollected") {
            // uncomment below to test the property
            //modelInstance.feesCollected shouldBe ("TODO")
        }

        // to test the property `feesImported`
        should("test feesImported") {
            // uncomment below to test the property
            //modelInstance.feesImported shouldBe ("TODO")
        }

        // to test the property `recovered`
        should("test recovered") {
            // uncomment below to test the property
            //modelInstance.recovered shouldBe ("TODO")
        }

        // to test the property `created`
        should("test created") {
            // uncomment below to test the property
            //modelInstance.created shouldBe ("TODO")
        }

        // to test the property `minted`
        should("test minted") {
            // uncomment below to test the property
            //modelInstance.minted shouldBe ("TODO")
        }

        // to test the property `burned`
        should("test burned") {
            // uncomment below to test the property
            //modelInstance.burned shouldBe ("TODO")
        }

    }
}
