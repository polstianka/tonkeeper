/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.tonapi.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.tonapi.models.Action
import io.tonapi.models.ActionSimplePreview
import io.tonapi.models.AuctionBidAction
import io.tonapi.models.ContractDeployAction
import io.tonapi.models.DepositStakeAction
import io.tonapi.models.DomainRenewAction
import io.tonapi.models.ElectionsDepositStakeAction
import io.tonapi.models.ElectionsRecoverStakeAction
import io.tonapi.models.InscriptionMintAction
import io.tonapi.models.InscriptionTransferAction
import io.tonapi.models.JettonBurnAction
import io.tonapi.models.JettonMintAction
import io.tonapi.models.JettonSwapAction
import io.tonapi.models.JettonTransferAction
import io.tonapi.models.NftItemTransferAction
import io.tonapi.models.NftPurchaseAction
import io.tonapi.models.SmartContractAction
import io.tonapi.models.SubscriptionAction
import io.tonapi.models.TonTransferAction
import io.tonapi.models.UnSubscriptionAction
import io.tonapi.models.WithdrawStakeAction
import io.tonapi.models.WithdrawStakeRequestAction

class ActionTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of Action
        //val modelInstance = Action()

        // to test the property `type`
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `status`
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

        // to test the property `simplePreview`
        should("test simplePreview") {
            // uncomment below to test the property
            //modelInstance.simplePreview shouldBe ("TODO")
        }

        // to test the property `baseTransactions`
        should("test baseTransactions") {
            // uncomment below to test the property
            //modelInstance.baseTransactions shouldBe ("TODO")
        }

        // to test the property `tonTransfer`
        should("test tonTransfer") {
            // uncomment below to test the property
            //modelInstance.tonTransfer shouldBe ("TODO")
        }

        // to test the property `contractDeploy`
        should("test contractDeploy") {
            // uncomment below to test the property
            //modelInstance.contractDeploy shouldBe ("TODO")
        }

        // to test the property `jettonTransfer`
        should("test jettonTransfer") {
            // uncomment below to test the property
            //modelInstance.jettonTransfer shouldBe ("TODO")
        }

        // to test the property `jettonBurn`
        should("test jettonBurn") {
            // uncomment below to test the property
            //modelInstance.jettonBurn shouldBe ("TODO")
        }

        // to test the property `jettonMint`
        should("test jettonMint") {
            // uncomment below to test the property
            //modelInstance.jettonMint shouldBe ("TODO")
        }

        // to test the property `nftItemTransfer`
        should("test nftItemTransfer") {
            // uncomment below to test the property
            //modelInstance.nftItemTransfer shouldBe ("TODO")
        }

        // to test the property `subscribe`
        should("test subscribe") {
            // uncomment below to test the property
            //modelInstance.subscribe shouldBe ("TODO")
        }

        // to test the property `unSubscribe`
        should("test unSubscribe") {
            // uncomment below to test the property
            //modelInstance.unSubscribe shouldBe ("TODO")
        }

        // to test the property `auctionBid`
        should("test auctionBid") {
            // uncomment below to test the property
            //modelInstance.auctionBid shouldBe ("TODO")
        }

        // to test the property `nftPurchase`
        should("test nftPurchase") {
            // uncomment below to test the property
            //modelInstance.nftPurchase shouldBe ("TODO")
        }

        // to test the property `depositStake`
        should("test depositStake") {
            // uncomment below to test the property
            //modelInstance.depositStake shouldBe ("TODO")
        }

        // to test the property `withdrawStake`
        should("test withdrawStake") {
            // uncomment below to test the property
            //modelInstance.withdrawStake shouldBe ("TODO")
        }

        // to test the property `withdrawStakeRequest`
        should("test withdrawStakeRequest") {
            // uncomment below to test the property
            //modelInstance.withdrawStakeRequest shouldBe ("TODO")
        }

        // to test the property `electionsDepositStake`
        should("test electionsDepositStake") {
            // uncomment below to test the property
            //modelInstance.electionsDepositStake shouldBe ("TODO")
        }

        // to test the property `electionsRecoverStake`
        should("test electionsRecoverStake") {
            // uncomment below to test the property
            //modelInstance.electionsRecoverStake shouldBe ("TODO")
        }

        // to test the property `jettonSwap`
        should("test jettonSwap") {
            // uncomment below to test the property
            //modelInstance.jettonSwap shouldBe ("TODO")
        }

        // to test the property `smartContractExec`
        should("test smartContractExec") {
            // uncomment below to test the property
            //modelInstance.smartContractExec shouldBe ("TODO")
        }

        // to test the property `domainRenew`
        should("test domainRenew") {
            // uncomment below to test the property
            //modelInstance.domainRenew shouldBe ("TODO")
        }

        // to test the property `inscriptionTransfer`
        should("test inscriptionTransfer") {
            // uncomment below to test the property
            //modelInstance.inscriptionTransfer shouldBe ("TODO")
        }

        // to test the property `inscriptionMint`
        should("test inscriptionMint") {
            // uncomment below to test the property
            //modelInstance.inscriptionMint shouldBe ("TODO")
        }

    }
}
