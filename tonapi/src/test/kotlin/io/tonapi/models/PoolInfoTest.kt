/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.tonapi.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.tonapi.models.PoolInfo
import io.tonapi.models.PoolImplementationType

class PoolInfoTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of PoolInfo
        //val modelInstance = PoolInfo()

        // to test the property `address`
        should("test address") {
            // uncomment below to test the property
            //modelInstance.address shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `totalAmount`
        should("test totalAmount") {
            // uncomment below to test the property
            //modelInstance.totalAmount shouldBe ("TODO")
        }

        // to test the property `implementation`
        should("test implementation") {
            // uncomment below to test the property
            //modelInstance.implementation shouldBe ("TODO")
        }

        // to test the property `apy` - APY in percent
        should("test apy") {
            // uncomment below to test the property
            //modelInstance.apy shouldBe ("TODO")
        }

        // to test the property `minStake`
        should("test minStake") {
            // uncomment below to test the property
            //modelInstance.minStake shouldBe ("TODO")
        }

        // to test the property `cycleStart` - current nomination cycle beginning timestamp
        should("test cycleStart") {
            // uncomment below to test the property
            //modelInstance.cycleStart shouldBe ("TODO")
        }

        // to test the property `cycleEnd` - current nomination cycle ending timestamp
        should("test cycleEnd") {
            // uncomment below to test the property
            //modelInstance.cycleEnd shouldBe ("TODO")
        }

        // to test the property `verified` - this pool has verified source code or managed by trusted company
        should("test verified") {
            // uncomment below to test the property
            //modelInstance.verified shouldBe ("TODO")
        }

        // to test the property `currentNominators` - current number of nominators
        should("test currentNominators") {
            // uncomment below to test the property
            //modelInstance.currentNominators shouldBe ("TODO")
        }

        // to test the property `maxNominators` - maximum number of nominators
        should("test maxNominators") {
            // uncomment below to test the property
            //modelInstance.maxNominators shouldBe ("TODO")
        }

        // to test the property `nominatorsStake` - total stake of all nominators
        should("test nominatorsStake") {
            // uncomment below to test the property
            //modelInstance.nominatorsStake shouldBe ("TODO")
        }

        // to test the property `validatorStake` - stake of validator
        should("test validatorStake") {
            // uncomment below to test the property
            //modelInstance.validatorStake shouldBe ("TODO")
        }

        // to test the property `liquidJettonMaster` - for liquid staking master account of jetton
        should("test liquidJettonMaster") {
            // uncomment below to test the property
            //modelInstance.liquidJettonMaster shouldBe ("TODO")
        }

        // to test the property `cycleLength`
        should("test cycleLength") {
            // uncomment below to test the property
            //modelInstance.cycleLength shouldBe ("TODO")
        }

    }
}
